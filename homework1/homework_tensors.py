import torch
# 1.1 Создание тензоров
# Создайте следующие тензоры:

# - Тензор размером 3x4, заполненный случайными числами от 0 до 1
tensor_1 = torch.rand(3, 4)
print(tensor_1)

# tensor([[0.4296, 0.5679, 0.3809, 0.1071],
#        [0.4983, 0.2406, 0.3023, 0.9555],
#        [0.7156, 0.5824, 0.1071, 0.3202]])

# - Тензор размером 2x3x4, заполненный нулями
tensor_2 = torch.rand(2, 3, 4)
print(tensor_2)

#tensor([[[0.8565, 0.7473, 0.8473, 0.9502],
#         [0.1950, 0.4634, 0.4370, 0.9631],
#         [0.3097, 0.3719, 0.1537, 0.6838]],
#
#        [[0.6699, 0.4754, 0.9861, 0.5945],
#         [0.3047, 0.8252, 0.2187, 0.6183],
#         [0.4506, 0.4517, 0.3823, 0.2240]]])

# - Тензор размером 5x5, заполненный единицами
tensor_3 = torch.ones(5, 5)
print(tensor_3)

#tensor([[1., 1., 1., 1., 1.],
#        [1., 1., 1., 1., 1.],
#        [1., 1., 1., 1., 1.],
#        [1., 1., 1., 1., 1.],
#        [1., 1., 1., 1., 1.]])

# - Тензор размером 4x4 с числами от 0 до 15 (используйте reshape)
# Сначала создаем одномерный тензор с числами от 0 до 15
tensor_4 = torch.arange(16)
# Затем изменяем его форму на 4x4
reshape_tensor_4 = tensor_4.reshape(4, 4)
print(reshape_tensor_4)

#tensor([[ 0,  1,  2,  3],
#        [ 4,  5,  6,  7],
#        [ 8,  9, 10, 11],
#        [12, 13, 14, 15]])

# Операции с тензорами
# Дано: тензор A размером 3x4 и тензор B размером 4x3
A = torch.tensor([
    [1, 2, 3, 4],
    [5, 6, 7, 8],
    [9, 10, 11, 12]
], dtype=torch.float32)

B = torch.tensor([
    [1, 2, 3],
    [4, 5, 6],
    [7, 8, 9],
    [10, 11, 12]
], dtype=torch.float32)

print(A, "\n", B)

# tensor([[ 1.,  2.,  3.,  4.],
#         [ 5.,  6.,  7.,  8.],
#         [ 9., 10., 11., 12.]])
# tensor([[ 1.,  2.,  3.],
#        [ 4.,  5.,  6.],
#        [ 7.,  8.,  9.],
#        [10., 11., 12.]])

# Выполните:
# - Транспонирование тензора A
A_T = A.T
print(A_T)

#tensor([[ 1.,  5.,  9.],
#        [ 2.,  6., 10.],
#        [ 3.,  7., 11.],
#        [ 4.,  8., 12.]])

# - Матричное умножение A и B
C = torch.matmul(A, B)
print(C)

#tensor([[ 70.,  80.,  90.],
#        [158., 184., 210.],
#        [246., 288., 330.]])

# - Поэлементное умножение A и транспонированного B
B_T = B.T
elementwise_product = torch.mul(A, B_T)
print(elementwise_product)

#tensor([[  1.,   8.,  21.,  40.],
#        [ 10.,  30.,  56.,  88.],
#        [ 27.,  60.,  99., 144.]])

# - Вычислите сумму всех элементов тензора A
sum_A = A.sum()
print(sum_A)

#tensor(78.)

#1.3 Индексация и срезы
# Создайте тензор размером 5x5x5
tensor555 = torch.arange(125).reshape(5, 5, 5)
print(tensor555)

# tensor([[[  0,   1,   2,   3,   4],
#          [  5,   6,   7,   8,   9],
#          [ 10,  11,  12,  13,  14],
#          [ 15,  16,  17,  18,  19],
#          [ 20,  21,  22,  23,  24]],

#         [[ 25,  26,  27,  28,  29],
#          [ 30,  31,  32,  33,  34],
#          [ 35,  36,  37,  38,  39],
#          [ 40,  41,  42,  43,  44],
#          [ 45,  46,  47,  48,  49]],

#         [[ 50,  51,  52,  53,  54],
#          [ 55,  56,  57,  58,  59],
#          [ 60,  61,  62,  63,  64],
#          [ 65,  66,  67,  68,  69],
#          [ 70,  71,  72,  73,  74]],

#         [[ 75,  76,  77,  78,  79],
#          [ 80,  81,  82,  83,  84],
#          [ 85,  86,  87,  88,  89],
#          [ 90,  91,  92,  93,  94],
#          [ 95,  96,  97,  98,  99]],

#         [[100, 101, 102, 103, 104],
#          [105, 106, 107, 108, 109],
#          [110, 111, 112, 113, 114],
#          [115, 116, 117, 118, 119],
#          [120, 121, 122, 123, 124]]])

# Извлеките:
# 1. Извлечение первой строки (первого вектора по первому измерению)
first_row = tensor555[0, :, :]
print(first_row)

# tensor([[ 0,  1,  2,  3,  4],
#         [ 5,  6,  7,  8,  9],
#         [10, 11, 12, 13, 14],
#         [15, 16, 17, 18, 19],
#         [20, 21, 22, 23, 24]])

# 2. Извлечение последнего столбца (последнего элемента по второму измерению в каждой матрице)
last_column = tensor555[:, :, -1]
print(last_column)

#tensor([[ 0,  1,  2,  3,  4],
#        [ 5,  6,  7,  8,  9],
#        [10, 11, 12, 13, 14],
#        [15, 16, 17, 18, 19],
#        [20, 21, 22, 23, 24]])

# 3. Подматрица 2x2 из центра тензора (берем центральные элементы по первым двум измерениям)
center_submatrix = tensor555[2:4, 2:4, :]
print(center_submatrix)

# tensor([[  4,   9,  14,  19,  24],
#         [ 29,  34,  39,  44,  49],
#         [ 54,  59,  64,  69,  74],
#         [ 79,  84,  89,  94,  99],
#         [104, 109, 114, 119, 124]])

# 4. Все элементы с четными индексами (берем элементы с шагом 2 по всем измерениям)
even_indices = tensor555[::2, ::2, ::2]
print(even_indices)

# tensor([[[60, 61, 62, 63, 64],
#          [65, 66, 67, 68, 69]],

#         [[85, 86, 87, 88, 89],
#          [90, 91, 92, 93, 94]]])
#          [ 10,  12,  14],
#          [ 20,  22,  24]],

#         [[ 50,  52,  54],
#          [ 60,  62,  64],
#          [ 70,  72,  74]],

#         [[100, 102, 104],
#          [110, 112, 114],
#          [120, 122, 124]]])

# 1.4 Работа с формами
# Создаем тензор из 24 элементов
tensor24 = torch.arange(24)
print(tensor24)

# tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
#         18, 19, 20, 21, 22, 23])

# Преобразуйте его в формы:
# - 2x12
tensor_2x12 = tensor24.reshape(2, 12)
print(tensor_2x12)

# tensor([[ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11],
#         [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]])

# - 3x8
tensor_3x8 = tensor24.reshape(3, 8)
print(tensor_3x8)

# tensor([[ 0,  1,  2,  3,  4,  5,  6,  7],
#         [ 8,  9, 10, 11, 12, 13, 14, 15],
#         [16, 17, 18, 19, 20, 21, 22, 23]])

# - 4x6
tensor_4x6 = tensor24.reshape(4, 6)
print(tensor_4x6)

# tensor([[ 0,  1,  2,  3,  4,  5],
#         [ 6,  7,  8,  9, 10, 11],
#         [12, 13, 14, 15, 16, 17],
#         [18, 19, 20, 21, 22, 23]])

# - 2x3x4
tensor_2x3x4 = tensor24.reshape(2, 3, 4)
print(tensor_2x3x4)

# tensor([[[ 0,  1,  2,  3],
#          [ 4,  5,  6,  7],
#          [ 8,  9, 10, 11]],

#         [[12, 13, 14, 15],
#          [16, 17, 18, 19],
#          [20, 21, 22, 23]]])

# - 2x2x2x3
tensor_2x2x2x3 = tensor24.reshape(2, 2, 2, 3)
print(tensor_2x2x2x3)

# tensor([[[[ 0,  1,  2],
#           [ 3,  4,  5]],

#          [[ 6,  7,  8],
#           [ 9, 10, 11]]],


#         [[[12, 13, 14],
#           [15, 16, 17]],

#          [[18, 19, 20],
#           [21, 22, 23]]]])